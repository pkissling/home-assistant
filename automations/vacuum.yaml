---

- alias: Vacuum - Daily cleanup when Residents not home
  trigger:
    - platform: state
      entity_id: group.residents
      from: home
      to: not_home
  condition:
    - condition: time
      after: '08:00:00'
      before: '20:00:00'
    - condition: state
      entity_id: input_boolean.vacuum_ran_today
      state: 'off'
    - condition: state
      entity_id: input_boolean.vacuum_daily_cleanup
      state: 'on'
  action:
    - service: vacuum.start
      entity_id: vacuum.xiaomi_vacuum_cleaner
    - service: script.vacuum_fan_medium

- alias: Vaccum - Daily cleanup at 10:00
  trigger:
    platform: time
    at: '10:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_ran_today
      state: 'off'
    - condition: state
      entity_id: input_boolean.vacuum_daily_cleanup
      state: 'on'
    - condition: state
      entity_id: group.residents
      state: not_home
  action:
    - service: vacuum.start
      entity_id: vacuum.xiaomi_vacuum_cleaner
    - service: script.vacuum_fan_medium

- alias: Vacuum - Notify cleanup finished
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    to: returning
  condition:
    condition: state
    entity_id: input_boolean.vacuum_notify_finish_on_dock
    state: 'on'
  action:
    service: notify.pushbullet
    data_template:
      title: Home Assistant
      target: device/OnePlus 7 Pro
      message: >
        Roborock finished Cleanup:
        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaned_area') }} m²,
        {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaning_time') }} minutes,
        Battery {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_level') }} %

- alias: Vacuum - Notify on cleanup finished
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    to: returning
  condition:
    condition: state
    entity_id: input_boolean.vacuum_notify_finish_on_return
    state: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.vacuum_ran_today
    - service: input_boolean.turn_off
      entity_id: input_boolean.vacuum_notify_finish_on_return
    - service: notify.pushbullet
      data_template:
        title: Home Assistant
        target: device/OnePlus 7 Pro
        message: >
          Roborock finished Cleanup:
          {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaned_area') }} m²,
          {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'cleaning_time') }} minutes,
          Battery {{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_level') }} %

- alias: Vacuum - Reset Daily Cleanup Boolean
  trigger:
    platform: time
    at: 00:00
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.vacuum_ran_today

- alias: Vacuum - Trigger cleanup done
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    to: cleaning
    for:
      minutes: 20
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.vacuum_notify_finish_on_return

- alias: Vacuum - Notify on error
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    to: error
  action:
    service: notify.pushbullet
    data_template:
      title: Home Assistant
      target: device/OnePlus 7 Pro
      message: "Roborock Error: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.error }}"

- alias: Vacuum - Notify on cleanup start
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    to: cleaning
  action:
    service: notify.pushbullet
    data:
      title: Home Assistant
      message: Roborock started Cleanup
      target: device/OnePlus 7 Pro
