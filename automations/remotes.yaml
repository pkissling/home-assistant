---

- alias: Remote - Turn on Speakers when Home Group is playing
  trigger:
    platform: state
    entity_id: media_player.home_group
    to: playing
  condition:
    condition: state
    entity_id: remote.living_room
    state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.remote_speakers

- alias: Remote - Turn on Chromecast when casting
  trigger:
    platform: template
    value_template: >
      {{
        not is_state('media_player.chromecast', 'unavailable')
          and
        not is_state('media_player.chromecast', 'off')
      }}
  condition:
    - condition: template
      value_template: "{{ not is_state_attr('remote.living_room', 'current_activity', 'Chromecast') }}"
    - condition: state
      entity_id: media_player.home_group
      state: 'off'
  action:
    - service: input_text.set_value
      entity_id: input_text.remote_previous_activity
      data:
        value: "{{ state_attr('remote.living_room', 'current_activity') }}"
    - service: switch.turn_on
      entity_id: switch.remote_chromecast

- alias: Remote - Back to previous Activity when Chromecast off
  trigger:
    platform: state
    entity_id: media_player.chromecast
    to: 'off'
  condition:
    - condition: template
      value_template: >
        {{
          not is_state('input_text.remote_previous_activity', 'unknown')
            and
          not is_state('input_text.remote_previous_activity', 'PowerOff')
        }}
    - condition: template
      value_template: "{{ is_state_attr('remote.living_room', 'current_activity', 'Chromecast') }}"
  action:
    - service: remote.turn_on
      entity_id: remote.living_room
      data:
        activity: "{{ states('input_text.remote_previous_activity') }}"
    - service: input_text.set_value
      entity_id: input_text.remote_previous_activity
      data:
        value: unknown

- alias: Remote - Turn off Speakers when Home Group stopped casting for 30 seconds
  trigger:
    platform: state
    entity_id: media_player.home_group
    to: 'off'
    for:
      seconds: 30
  condition:
    condition: template
    value_template: "{{ is_state_attr('remote.living_room', 'current_activity', 'Speakers') }}"
  action:
    service: remote.turn_off
    entity_id: remote.living_room

- alias: Remote - Turn off Speakers when Home Group paused casting for 15 minutes
  trigger:
    platform: state
    entity_id: media_player.home_group
    to: 'paused'
    for:
      minutes: 15
  condition:
    condition: template
    value_template: "{{ is_state_attr('remote.living_room', 'current_activity', 'Speakers') }}"
  action:
    service: remote.turn_off
    entity_id: remote.living_room

- alias: Remote - Turn off TV when Chromecast stopped casting for 5 minutes
  trigger:
    platform: template
    value_template: >
      {{
        is_state('media_player.chromecast', 'off')
          or
        is_state('media_player.chromecast', 'idle')
      }}
    for:
      minutes: 5
  condition:
    condition: template
    value_template: "{{ is_state_attr('remote.living_room', 'current_activity', 'Chromecast') }}"
  action:
    service: remote.turn_off
    entity_id: remote.living_room

- alias: Remote - Force TV off
  trigger:
    platform: template
    value_template: >
      {{
        is_state('media_player.lg_webos_smart_tv', 'on')
          and
        is_state('remote.living_room', 'off')
      }}
    for:
      minutes: 1
  action:
    - service: notify.patrick
      data:
        title: Harmony
        message: TV forced off as Harmony is off as well.
    - service: media_player.turn_off
      entity_id: media_player.lg_webos_smart_tv

- alias: Remote - Turn off Amplifer if still running
  trigger:
    platform: state
    entity_id: remote.living_room
    to: 'off'
    for:
      seconds: 10
  condition:
    condition: numeric_state
    entity_id: sensor.plug_living_room_amplifier
    above: 10
  mode: queued
  action:
    repeat:
      sequence:
        # Run command that for some reason doesn't always work
        - service: remote.send_command
          entity_id: remote.living_room
          data:
            device: Pioneer-AV-Receiver
            command: PowerOff
        # Give plug time to update the sensor
        - delay:
            seconds: 5
      until:
        condition: numeric_state
        entity_id: sensor.plug_living_room_amplifier
        below: 10

- alias: Remote - Turn on Amplifer if not running
  trigger:
    platform: state
    entity_id: remote.living_room
    to: 'on'
    for:
      seconds: 10
  condition:
    condition: numeric_state
    entity_id: sensor.plug_living_room_amplifier
    below: 10
  mode: queued
  action:
    repeat:
      sequence:
        # Retry turning on amplifier
        - service: remote.send_command
          entity_id: remote.living_room
          data:
            device: Pioneer-AV-Receiver
            command: PowerOn

        # Give amplifier time to start and get ready
        - delay:
            seconds: 10

        # Set correct input source
        - service: remote.send_command
          entity_id: remote.living_room
          data:
            device: Pioneer-AV-Receiver
            command: >
              {% if state_attr('remote.living_room', 'current_activity') == 'Speakers' %}
                InputHdmi1
              {% elif state_attr('remote.living_room', 'current_activity') == 'Chromecast' %}
                InputHdmi1
              {% else %}
                InputTv
              {% endif %}

      until:
        condition: numeric_state
        entity_id: sensor.plug_living_room_amplifier
        above: 10
