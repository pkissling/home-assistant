---

light_ambient_turn_on:
  fields:
    transition:
      description: Time in seconds until transition ends.
      required: 'false'
      default: 0
  sequence:
    - service: light.turn_on
      entity_id: light.bedroom_wardrobe
      data:
        kelvin: 1000
        brightness: 100
        transition: "{{ transition }}"
    - choose:
        - conditions:
            condition: state
            entity_id: input_boolean.tv_mode
            state: 'on'
          sequence:
            - service: light.turn_on
              entity_id: light.living_room
              data:
                kelvin: 2300
                brightness: 80
                transition: "{{ transition }}"
            - service: input_text.set_value
              entity_id: input_text.old_brightness_living_room
              data:
                value: 255
      default:
        service: light.turn_on
        entity_id: light.living_room
        data:
          kelvin: 2300
          brightness: 255
          transition: "{{ transition }}"
    - service: light.turn_on
      entity_id: light.corridor_sideboard
      data:
        kelvin: 2300
        brightness: 50
        transition: "{{ transition }}"
    - choose:
        - conditions:
            condition: state
            entity_id: switch.guest_mode
            state: 'off'
          sequence:
            service: light.turn_on
            entity_id: light.study_shelf
            data:
              kelvin: 2300
              brightness: 50
              transition: "{{ transition }}"
    # keep script in state 'on' until script finished
    - delay: "{{ transition }}"

light_ambient_turn_off:
  fields:
    transition:
      description: Time in seconds until transition ends.
  sequence:
    - service: light.turn_on
      entity_id: light.bedroom_wardrobe
      data:
        brightness: 0
        transition: "{{ transition }}"
    - service: light.turn_on
      entity_id: light.living_room
      data:
        brightness: 0
        transition: "{{ transition }}"
    - service: light.turn_on
      entity_id: light.corridor_sideboard
      data:
        brightness: 0
        transition: "{{ transition }}"
    - choose:
        - conditions:
            condition: state
            entity_id: switch.guest_mode
            state: 'off'
          sequence:
            - service: light.turn_on
              entity_id: light.study_shelf
              data:
                brightness: 0
                transition: "{{ transition }}"
            - service: light.turn_on
              entity_id: light.study_floor_lamp
              data:
                brightness: 0
                transition: "{{ transition }}"
    # keep script in state 'on' until script finished
    - delay: "{{ transition }}"

# light_turn_on:
#   fields:
#     light_entity_id:
#     motion_sensor_entity_id:
#     dim_time_in_mins:
#     upper_brightness:
#     lower_brightness:
#   sequence:
#     - condition: and
#       conditions:
#         - "{{ not is_state('vacuum.xiaomi_vacuum_cleaner', 'cleaning') }}"
#         - "{{ not is_state('vacuum.xiaomi_vacuum_cleaner', 'returning') }}"
#         - condition: state
#           entity_id: binary_sensor.sun
#           state: 'off'
#       # if light on and script.light_ambient_turn_off is off on
#       - choose:
#         - conditions:
#             - condition: state
#               entity_id: "{{ light_entity_id }}"
#               state: 'on'
#             - condition: state
#               entity_id: script.light_ambient_turn_off
#               state: 'off'
#             - condition: state
#               entity_id: input_boolean.night_light
#               state: 'off'
#           sequence:
#             - service: light.turn_on
#               entity_id: "{{ light_entity_id }}"
#               data:
#                 brightness: "{{ upper_brightness }}"
#             - wait_for_trigger:
#               platform: state
#               entity_id: binary_sensor.motion_study
#               to: 'off'
#               for:
#                 minutes: "{{ dim_time_in_mins }}"
#             - service: light.turn_on
#               entity_id: "{{ light_entity_id }}"
#               data:
#                 transition: 60  # 1 min
#                 brightness: "{{ lower_brightness }}"
#         # else
#         default:
#           - service: input_boolean.turn_on
#             entity_id: input_boolean.night_light
#           - service: light.turn_on
#             entity_id: "{{ light_entity_id }}"
#             data:
#               brightness: "{{ lower_brightness }}"
#           - wait_for_trigger:
#               platform: state
#               entity_id: "{{ motion_sensor_entity_id }}"
#               to: 'off'
#               for:
#                 minutes: "{{ dim_time_in_mins }}"
#             timeout: '00:30:00'
#           - service: light.turn_on
#             entity_id: "{{ light_entity_id }}"
#             data:
#               transition: 60  # 1 min
#               brightness: 0
#           - wait_for_trigger:
#               platform: state
#               entity_id: "{{ light_entity_id }}"
#               to: 'off'
#               for:
#                 minutes: "{{ dim_time_in_mins }}"
#             timeout: '00:10:00'            
#           - service: input_boolean.turn_off
#             entity_id: input_boolean.night_light
