---

- alias: Alarm - Prepare TTS
  trigger:
    - platform: template
      value_template: >
        {{
          state_attr('light.lightstrip', 'flowing') == True
            and
          is_state('light.lightstrip', 'on')
        }}
  condition:
    - condition: time
      after: '18:00:00'
      before: '02:00:00'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.alarm_tts

- alias: Alarm - Say alarm clock status
  trigger:
    platform: state
    entity_id: media_player.bedroom_display
    from: playing
    to: 'off'
  condition:
    - condition: state
      entity_id: input_boolean.alarm_tts
      state: 'on'
  action:
    - service: media_player.play_media
      entity_id: media_player.bedroom_display
      data_template:
        media_content_type: music
        media_content_id: >
          https://www.google.com/speech-api/v2/synthesize?lang=en-us&use_google_only_voices=1&client=assistant-http-tts&key={{ states('input_text.google_api_key') }}&enc=opus&text={% if is_state('switch.alarm_next_day', 'on') %}The+alarm+is+set+for+{{ state_attr('input_datetime.wakeup_time', 'hour') }}+{{ state_attr('input_datetime.wakeup_time', 'minute') }}.{% else %}No+alarm+set+for+tomorrow.{% endif %}
    - service: input_boolean.turn_off
      entity_id: input_boolean.alarm_tts

- alias: Alarm - Sunrise Lights
  trigger:
    - platform: template
      value_template: "{{ ((strptime(states('sensor.time'), '%H:%M').time().hour * 60 + strptime(states('sensor.time'), '%H:%M').time().minute) * 60) | int == (state_attr('input_datetime.wakeup_time', 'timestamp') | int) - 60 * 15 }}"
  condition:
    - condition: state
      entity_id: switch.alarm_next_day
      state: 'on'
    - condition: state
      entity_id: group.residents
      state: home
  action:
    - service: light.turn_on
      entity_id:
        - light.bedroom
        - light.living_room
      data:
        effect: Sunrise

- alias: Alarm - News and Music
  trigger:
    - platform: template
      value_template: "{{ ((strptime(states('sensor.time'), '%H:%M').time().hour * 60 + strptime(states('sensor.time'), '%H:%M').time().minute) * 60) | int == (state_attr('input_datetime.wakeup_time', 'timestamp') | int) }}"
  condition:
    - condition: state
      entity_id: switch.alarm_next_day
      state: 'on'
    - condition: state
      entity_id: group.residents
      state: home
  action:
    - service: media_player.volume_set
      entity_id: media_player.bedroom_display
      data:
        volume_level: 0.2
    - service: media_extractor.play_media
      entity_id: media_player.bedroom_display
      data:
        media_content_id: http://www.tagesschau.de/100sekunden/index.html
        media_content_type: video
    - delay: '00:02:00'
    - service: media_player.play_media
      entity_id: media_player.home_group
      data:
        media_content_id: http://nrj.de/muenchen
        media_content_type: music
