---

- alias: Light - Bedroom Wardrobe - Reset after 45 mins
  mode: restart
  trigger:
    platform: numeric_state
    entity_id: light.bedroom_wardrobe
    attribute: brightness
    above: 100
    for:
      minutes: 45
  condition:
    condition: time
    after: '12:00:00'
  action:
    service: light.turn_on
    entity_id: light.bedroom_wardrobe
    data:
      brightness: 100
      transition: 60  # 1 minute

- alias: Light - Sync with sensor
  mode: parallel
  max: 20
  trigger:
    - platform: state
      entity_id: sensor.light_study_floor_lamp
      attribute: brightness
    - platform: state
      entity_id: sensor.light_study_floor_lamp
      attribute: color_temp_kelvin
    - platform: state
      entity_id: sensor.light_study_desk
      attribute: brightness
    - platform: state
      entity_id: sensor.light_study_desk
      attribute: color_temp_kelvin
    - platform: state
      entity_id: sensor.light_study_shelf
      attribute: brightness
    - platform: state
      entity_id: sensor.light_study_shelf
      attribute: color_temp_kelvin
    - platform: state
      entity_id: sensor.light_living_room
      attribute: brightness
    - platform: state
      entity_id: sensor.light_corridor
      attribute: brightness
    - platform: state
      entity_id: sensor.light_bedroom
      attribute: brightness
  action:
    - service: switch.turn_on
      data:
        entity_id: "{{ state_attr(trigger.entity_id, 'adaptive_lighting_switch_entity_id') }}"
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: "{{ state_attr(trigger.entity_id, 'adaptive_lighting_switch_entity_id') }}"
        manual_control: true
    - service: light.turn_on
      data:
        entity_id: "{{ state_attr(trigger.entity_id, 'target_entity_id') }}"
        brightness: "{{ state_attr(trigger.entity_id, 'brightness') }}"
        color_temp_kelvin: "{{ state_attr(trigger.entity_id, 'color_temp_kelvin') }}"
        transition: "{{ state_attr(trigger.entity_id, 'transition') }}"
    - delay: "{{ state_attr(trigger.entity_id, 'transition') }}"
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: "{{ state_attr(trigger.entity_id, 'adaptive_lighting_switch_entity_id') }}"
        manual_control: false
