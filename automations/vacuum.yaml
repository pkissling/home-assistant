---

- alias: Vacuum - Daily cleanup when Residents not home
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: state
      entity_id: group.residents
      from: home
      to: not_home
      for:
        hours: 1
  condition:
    - condition: time
      after: '07:00:00'
      before: '20:00:00'
    - condition: state
      entity_id: input_boolean.vacuum_ran_today
      state: 'off'
    - condition: state
      entity_id: input_boolean.vacuum_daily_cleanup
      state: 'on'
    - condition: state
      entity_id: group.residents
      state: not_home
  action:
    - service: vacuum.start
      entity_id: vacuum.roborock
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.roborock
        fan_speed: '103'  # medium

- alias: Vacuum - Notify on cleanup finished when not home
  trigger:
    platform: state
    entity_id: vacuum.roborock
    to: returning
  condition:
    condition: state
    entity_id: person.patrick
    state: not_home
  action:
    service: notify.patrick
    data:
      title: Roborock
      message: >
        Roborock finished Cleanup:
        {{ states('sensor.roborock_last_clean_area') | int }} mÂ²,
        {{ (states('sensor.roborock_last_clean_duration') | float / 60) | round(0) }} minutes,
        Battery {{ state_attr('vacuum.roborock', 'battery_level') }} %

- alias: Vacuum - Reset Daily Cleanup Boolean
  trigger:
    platform: time
    at: 00:00
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.vacuum_ran_today

- alias: Vacuum - Trigger set states on cleanup done
  trigger:
    platform: state
    entity_id: vacuum.roborock
    to: cleaning
    for:
      minutes: 20
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.vacuum_ran_today

- alias: Vacuum - Notify on error
  trigger:
    platform: state
    entity_id: vacuum.roborock
    to: error
  action:
    service: notify.patrick
    data:
      title: Roborock
      message: >
        Roborock Error: {{ states.vacuum.roborock.attributes.error }}

- alias: Vacuum - Send to Trash Bin
  trigger:
    - platform: numeric_state
      entity_id: vacuum.roborock
      attribute: battery_level
      above: 99
    - platform: numeric_state
      entity_id: sensor.vacuum_next_emptying
      below: 1
    - platform: state
      entity_id: group.residents
      to: home
    - platform: state
      entity_id: vacuum.roborock
      to: docked
    - platform: state
      entity_id: input_boolean.guest_mode
      to: 'off'
    - platform: time
      at: '08:00:00'
  condition:
    - condition: numeric_state
      entity_id: vacuum.roborock
      attribute: battery_level
      above: 99
    - condition: state
      entity_id: group.residents
      state: home
    - condition: state
      entity_id: vacuum.roborock
      state: docked
    - condition: numeric_state
      entity_id: sensor.vacuum_next_emptying
      below: 1
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
    - condition: time
      after: '08:00:00'
      before: '20:00:00'
  action:
    - service: script.vacuum_dust_bin
    - service: notify.patrick
      data:
        title: Roborock
        message: Please empty dust bin!

- alias: Vacuum - Update vacuum_cleaned_m2_since_last_emptying
  trigger:
    platform: state
    entity_id: sensor.roborock_last_clean_area
    not_from: unavailable
  action:
    service: input_text.set_value
    entity_id: input_text.vacuum_cleaned_m2_since_last_emptying
    data:
      value: "{{ states('input_text.vacuum_cleaned_m2_since_last_emptying') | int + states('sensor.roborock_last_clean_area') | default(0) | int }}"

- alias: Vacuum - Start cleaning when last person has left the apartment
  trigger:
    platform: state
    entity_id: binary_sensor.door_corridor_contact
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.vacuum_after_leave
    state: 'on'
  action:
    - wait_for_trigger:
        platform: state
        entity_id: binary_sensor.door_corridor_contact
        from: 'on'
        to: 'off'
    - service: vacuum.start
      entity_id: vacuum.roborock
    - service: input_boolean.turn_off
      entity_id: input_boolean.vacuum_after_leave
