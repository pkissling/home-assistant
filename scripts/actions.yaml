---

good_night_google_assistant:
  mode: restart
  sequence:
    - service: light.turn_off
      entity_id: all
      data:
        transition: 180  # 3 min
    - service: media_player.turn_off
      entity_id: media_player.lg_webos_smart_tv
    - service: input_boolean.turn_off
      entity_id: input_boolean.home_office_mode
    - service: switch.turn_off
      entity_id: switch.remote_off
    - service: input_boolean.turn_off
      entity_id: input_boolean.party_mode
    - wait_for_trigger:
        platform: state
        entity_id: media_player.bedroom
        to: 'off'
      continue_on_timeout: false
      timeout: '0:15:00'
    - choose:
        - conditions:
            - condition: state
              entity_id: group.window_all
              state: 'on'
            - condition: state
              entity_id: input_boolean.summer_mode
              state: 'off'
          sequence:
            - service: tts.google_translate_say
              entity_id: media_player.bedroom
              data:
                message: >
                  Windows are open in:
                  {{
                    expand('group.window_all')
                    | selectattr('state', 'eq', 'on')
                    | map(attribute='name')
                    | join(',')
                    | replace('Window', '')
                  }}
            - wait_for_trigger:
                platform: state
                entity_id: media_player.bedroom
                to: 'idle'
              timeout: '0:00:20'
    - choose:
        - conditions:
            condition: state
            entity_id: switch.alarm
            state: 'on'
          sequence:
            service: tts.google_translate_say
            entity_id: media_player.bedroom
            data:
              message: >
                The alarm is set to
                {{ state_attr('input_datetime.wakeup_time', 'hour') }}
                {{ state_attr('input_datetime.wakeup_time', 'minute') }}.
                Good night!
      default:
        service: tts.google_translate_say
        entity_id: media_player.bedroom
        data:
          message: "No alarm set for tomorrow. Good night!"
    - wait_for_trigger:
        platform: state
        entity_id: media_player.bedroom
        from: playing
        to: idle
      timeout: '0:00:20'
    - service: media_player.turn_off
      entity_id: media_player.bedroom

good_night:
  mode: restart
  sequence:
    - service: media_player.turn_off
      entity_id: media_player.lg_webos_smart_tv
    - service: input_boolean.turn_off
      entity_id: input_boolean.home_office_mode
    - service: switch.turn_off
      entity_id: switch.remote_off
    - service: input_boolean.turn_off
      entity_id: input_boolean.party_mode
    - service: input_boolean.turn_on
      entity_id: input_boolean.night_light_mode
    - choose:
        - conditions:
            - condition: state
              entity_id: group.window_all
              state: 'on'
            - condition: state
              entity_id: input_boolean.summer_mode
              state: 'off'
            - condition: state
              entity_id: input_boolean.guest_mode
              state: 'off'
          sequence:
            service: mqtt.publish
            data:
              topic: wallpanel/corridor/command
              payload: >
                {%
                  set open_windows = expand('group.window_all')
                  | selectattr('state', 'eq', 'on')
                  | map(attribute='name')
                  | join(',')
                  | replace('Window', '')
                %}
                {"speak":"Windows open in {{ open_windows }}"}
    - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.guest_mode
              state: 'off'
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: switch.alarm
                      state: 'on'
                  sequence:
                    service: mqtt.publish
                    data:
                      topic: wallpanel/corridor/command
                      payload: >
                        {
                          "speak":" The alarm is set to
                          {{ state_attr('input_datetime.wakeup_time', 'hour') }}
                          {{ state_attr('input_datetime.wakeup_time', 'minute') }}.
                          Good night!"
                        }
              default:
                service: mqtt.publish
                data:
                  topic: wallpanel/corridor/command
                  payload: >
                    { "speak":" No alarm is set for tomorrow. Good night!" }
    - choose:
        - conditions:
            - condition: state
              entity_id: light.bedroom_wardrobe
              state: 'off'
          sequence:
            - service: light.turn_on
              entity_id: light.bedroom_wardrobe
              data:
                brightness: 10
                transition: 10
            - delay: 10
    - service: light.turn_off
      entity_id: all
      data:
        transition: 120  # 2 min

good_morning:
  mode: restart
  sequence:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.sun
              state: 'off'
          sequence:
            - service: light.turn_on
              entity_id: light.bedroom_wardrobe
              data:
                brightness: 200
                transition: 60  # 1 min
    # Wait some seconds until news was read
    - delay: 30  # seconds
    - wait_for_trigger:
        - platform: state
          entity_id: media_player.bedroom
          to: idle
        - platform: state
          entity_id: media_player.all_speakers
          to: idle
        - platform: state
          entity_id: media_player.bathroom
          to: idle
      timeout: '00:10:00'
    - service: media_player.turn_off
      entity_id: all
    - service: switch.turn_on
      entity_id: switch.radio_puls
